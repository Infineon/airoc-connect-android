def appName = "CySmart"
def appVersion = "1.3.0"

apply plugin: 'com.android.application'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.3'
    }
}

allprojects {
    repositories {
        mavenCentral()
        jcenter()
        google()
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation files('libs/achartengine-1.0.0.jar')

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.0.0'

//	  testImplementation 'junit:junit:4.12'
//	  androidTestImplementation 'com.android.support.test:runner:1.0.2'
//	  androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 29
        // Set manifest's versionName
        def ver = "${appVersion}.${System.getenv('BUILD_NUMBER') ?: 0}"
        manifestPlaceholders = [version_name: ver]
        setProperty("archivesBaseName", "${appName}_${ver}")
    }
    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
    productFlavors {
    }
}
